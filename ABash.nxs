{"type":"group","name":"ABash","enabled":true,"items":[{"type":"function","name":"onLoad","enabled":true,"code":"display_notice(\"Loading ABash\", \"green\");\n\n/*var rand = Math.floor(Math.random() * 1000);\nvar commitID = \"313849f85011dd03c55c20d5873dd5868840b00a\";\nvar url = \"https://cdn.jsdelivr.net/gh/eatymeatyyum/abash@\" + commitID + \"/basher.js?t=\" + rand;\nvar url2 = \"https://cdn.jsdelivr.net/gh/eatymeatyyum/abash@latest/import-test.js\";\n\nimport(url).then(() => {abash.startUp()})*/\n\nconst abash = {\n\tversion: \"2.0\",\n\n\tstartUp() {\n\t\tconsole.log(\"ABash loaded successfully\");\n\t\t\n\t\t// declare namespace variables\n\t\t//const version = 1.5;\n\t\tlet currentArea = \"\";\n\t\tlet prioList = {};\n\t\tlet classAttacks = {};\n\t\tlet myClass;\n\t\tabash.myClass = nexusclient.datahandler().GMCP.Status.class;\n\t\tconsole.log(\"GMCP class: \" + nexusclient.datahandler().GMCP.Status.class);\n\t\tconsole.log(\"ABash class set to: \" + abash.myClass);\n\t\tlet bashAttack;\n\n\t\t// In case of package reset, unsubscribe from all associated events\n\t\teventBus.unsubscribe('denizenSlain', 'denSlain');\n\t\teventBus.unsubscribe('affRemProne', 'attackReady');\n\t\teventBus.unsubscribe('affRemParalysis', 'attackReady');\n\t\teventBus.unsubscribe('affRemBound', 'attackReady');\n\t\teventBus.unsubscribe('affRemEntangled', 'attackReady');\n\t\teventBus.unsubscribe('affRemTransfixation', 'attackReady');\n\t\teventBus.unsubscribe('affRemWebbed', 'attackReady');\n\t\teventBus.unsubscribe('affRemStunned', 'attackReady');\n\t\teventBus.unsubscribe('onEq', 'attackReady');\n\t\teventBus.unsubscribe('onBal', 'attackReady');\n\t\teventBus.unsubscribe('onClassChange', \"checkClassAttack\");\n\n\t\tif(!nexusclient.variables().get(\"basharrrPrioList\")) {\n\t\t\tnexusclient.display_notice(\"There's no bashing prio list!!!\", \"red\");\n\t\t\tabash.prioList = {};\n\t\t\tnexusclient.variables().set(\"basharrrPrioList\", abash.prioList);\n\t\t} else {\n\t\t\tabash.prioList = nexusclient.variables().get(\"basharrrPrioList\");\n\t\t\tnexusclient.display_notice(\"Bashing Prio List loaded into repo!\", \"green\");\n\t\t}\n\n\t\tif(!nexusclient.variables().get(\"abashClassAttacks\")) {\n\t\t\tabash.classAttacks = {};\n\t\t\tnexusclient.variables().set(\"abashClassAttacks\", abash.classAttacks);\n\t\t} else {\n\t\t\tabash.classAttacks = nexusclient.variables().get(\"abashClassAttacks\");\n\t\t}\n\n\t\tif(abash.myClass in abash.classAttacks) {\n\t\t\tabash.bashAttack = abash.classAttacks[abash.myClass];\n\t\t} else {\n\t\t\tabash.bashAttack = \"kill\";\n\t\t}\n\t\tconsole.log(\"myClass: \" + abash.myClass);\n\t\tconsole.log(\"ABash bashing attack: \" + abash.bashAttack);\n\n\t\t// Trigger: When a denizen is slain\n\t\tconst denSlain = function(denizen) {\n\t\t\tlet slainDenizen = denizen;\n\t\t\tabash.currentArea = nexusclient.datahandler().GMCP.Location.areaname;\n\n\t\t\tif(abash.prioList[abash.currentArea]) {\n\t\t\t\t// Area already exists in prio list\n\t\t\t\tlet denizenList = abash.prioList[abash.currentArea];\n\t\t\t\tconsole.log(denizenList);\n\t\t\t\tif(!denizenList.includes(slainDenizen)) {\n\t\t\t\t\tnexusclient.display_notice(\"[ABASH]: New denizen added\", \"yellow\");\n\t\t\t\t\tdenizenList.push(slainDenizen);\n\t\t\t\t\tabash.prioList[abash.currentArea] = denizenList;\n\t\t\t\t\tnexusclient.variables().set(\"basharrrPrioList\", abash.prioList);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Area does not exist in prio list\n\t\t\t\tlet denizenList = [];\n\t\t\t\tdenizenList.push(slainDenizen);\n\t\t\t\tabash.prioList[abash.currentArea] = denizenList;\n\t\t\t\tconsole.log(abash.prioList);\n\t\t\t\tnexusclient.variables().set(\"basharrrPrioList\", abash.prioList);\n\t\t\t\tnexusclient.display_notice(\"[ABASH]: New area added\", \"yellow\");\n\t\t\t\tnexusclient.display_notice(\"[ABASH]: New denizen added\", \"yellow\");\n\t\t\t}\n\n\t\t\trun_function(\"attackThings\", {}, \"ABash\");\n\t\t}\n\t\teventBus.subscribe('denizenSlain', denSlain, 'denSlain');\n\n\t\t// Trigger: Main attack trigger\n\t\tconst attackReady = function() {\n\t\t\tabash.commitAttack();\n\t\t}\n\t\teventBus.subscribe('affRemProne', attackReady, 'attackReady');\n\t\teventBus.subscribe('affRemParalysis', attackReady, 'attackReady');\n\t\teventBus.subscribe('affRemBound', attackReady, 'attackReady');\n\t\teventBus.subscribe('affRemEntangled', attackReady, 'attackReady');\n\t\teventBus.subscribe('affRemTransfixation', attackReady, 'attackReady');\n\t\teventBus.subscribe('affRemWebbed', attackReady, 'attackReady');\n\t\teventBus.subscribe('affRemStunned', attackReady, 'attackReady');\n\t\teventBus.subscribe('onEq', attackReady, 'attackReady');\n\t\teventBus.subscribe('onBal', attackReady, 'attackReady');\n\n\t\tconst checkClassAttack = function() {\n\t\t\tabash.myClass = nexusclient.datahandler().GMCP.Status.class;\n\t\t\tnexusclient.display_notice(\"Current Class: \" + abash.myClass, \"white\");\n\t\t\tif(abash.myClass in abash.classAttacks) {\n\t\t\t\tabash.bashAttack = abash.classAttacks[abash.myClass];\n\t\t\t} else {\n\t\t\t\tabash.bashAttack = \"kill\";\n\t\t\t}\n\t\t\tnexusclient.display_notice(\"Bashing Attack: \", \"white\", \"\", abash.bashAttack, \"yellow\");\n\t\t\tif(abash.bashAttack == \"kill\") {\n\t\t\t\tnexusclient.display_notice(\"To set your class bashing attack use ABASH SET ATTACK <attack>\", \"white\");\n\t\t\t}\n\t\t}; // End checkClassAttack()\n\t\teventBus.subscribe('onClassChange', checkClassAttack, 'checkClassAttack');\n\n\t}, // End startUp()\n\t\n\t/*attackThings() {\n\t\tlet roomItems = nexusclient.datahandler().GMCP.Items.room;\n\t\tabash.prioList = nexusclient.variables().get(\"basharrrPrioList\");\n\t\tabash.currentArea = nexusclient.datahandler().GMCP.Location.areaname;\n\t\tlet enemyList = abash.prioList[abash.currentArea];\n\t\tlet enemyFound = false;\n\t\tlet bashing = nexusclient.variables().get(\"bashing\");\n\n\t\troomItems.forEach(function(el) {\n\t\t\tif(enemyList && enemyFound == false) {\n\t\t\t\tenemyList.forEach(function(el2) {\n\t\t\t\t\tif(el.name == el2) {\n\t\t\t\t\t\tenemyFound = true;\n\t\t\t\t\t\tnexusclient.datahandler().send_command(\"st \" + el.id);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (enemyFound == false) {\n\t\t\tnexusclient.display_notice(\"No enemies found\", \"green\");\n\t\t\tnexusclient.datahandler().send_command(\"st none\");\n\t\t\tnexusclient.variables().set(\"bashing\", false);\n\t\t} else if (bashing == false) {\n\t\t\tnexusclient.variables().set(\"bashing\", true);\n\t\t\tnexusclient.datahandler().send_command(abash.bashAttack);\n\t\t}\n\t}, // End attackThings()*/\n\n    runCommand(suffix) {\n        let command = suffix;\n\t\t\n\t\tif (command.startsWith(\"remove prio\")) {\n\t\t\tlet enemyRemoval = command.slice(12);\n\t\t\tabash.currentArea = nexusclient.datahandler().GMCP.Location.areaname;\n\t\t\tlet enemyList = abash.prioList[abash.currentArea];\n\t\t\tlet enemyFound = false;\n\t\t\t\n\t\t\tenemyList.forEach(function(el) {\n\t\t\t\tif(el == enemyRemoval) {\n\t\t\t\t\tenemyFound = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif (enemyFound) {\n\t\t\t\tlet enemyIndex = enemyList.indexOf(enemyRemoval);\n\t\t\t\tif (enemyIndex !== -1) {\n  \t\t\t\t\tenemyList.splice(enemyIndex, 1);\n\t\t\t\t\tabash.prioList[abash.currentArea] = enemyList;\n\t\t\t\t\tnexusclient.display_notice(\"Enemy removed from prio list\", \"green\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnexusclient.display_notice(\"Enemy not found in this area.\", \"red\");\n\t\t\t}\n\t\t} else if (command.startsWith(\"set attack\")) {\n\t\t\tlet newAttack = command.slice(11);\n\t\t\tabash.bashAttack = newAttack;\n\t\t\tabash.classAttacks[abash.myClass] = newAttack;\n\t\t\tnexusclient.variables().set(\"abashClassAttacks\", abash.classAttacks);\n\t\t} else {\n\n\t                switch (command) {\n\t\t\t\t\n\t\t\t\tcase \"help\":\n\t\t\t\t\tnexusclient.display_notice(\"ABash Help\", \"white\");\n\t\t\t\t\tnexusclient.display_notice(\"-----------------\", \"white\");\n\t\t\t\t\tnexusclient.display_notice(\"abash show prios here - list prio denizens in current area\", \"white\");\n\t\t\t\t\tnexusclient.display_notice(\" - click on red X to remove a denizen from the prio list\", \"white\");\n\t\t\t\t\tnexusclient.display_notice(\"abash set attack <attack> - Sets the bashing attack for your current class.\", \"white\");\n\t\t\t\t\tnexusclient.display_notice(\"*Note: if you're setting a multicommand attack you will need to change your commandseparator first, then set it back afterwards.\", \"white\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"show prios here\":\n\t\t\t\t\tabash.currentArea = nexusclient.datahandler().GMCP.Location.areaname;\n\t\t\t\t\tlet enemyList = abash.prioList[abash.currentArea];\n\t\t\t\t\tlet str = \"<span style='color:white'>Area: \" + abash.currentArea + \"</span>\\n\";\n\t\t\t\t\tstr += \"<span style='color:white'>-----------------</span>\\n\";\n\t\t\t\t\tenemyList.forEach(function(el) {\n\t\t\t\t\t\tstr += \"<span style='white'>[</span><span style='color:red' onClick='(function() { abash.runCommand(\\\"remove prio \" + el + \"\\\") })();'> X </span><span style='color:white'>] \" + el + \"</span>\\n\";\n\t\t\t\t\t});\n\t\t\t\t\tstr += \"<span style='color:white'>-----------------</span>\\n\";\n\t\t\t\t\tnexusclient.add_html_line(str);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tnexusclient.display_notice(\"Command not recognized.\", \"white\");\n\t\t\t}\n        }\n    },\n\n\tcommitAttack() {\n\t\tlet bashing = nexusclient.variables().get(\"bashing\");\n\n\t\tif(bashing) {\n\t\t\tnexusclient.datahandler().send_command(\"cq all | queue add free \" + abash.bashAttack);\n\t\t}\n\t}, // End commitAttack()\n\n}; // End of namespace\n\nabash.startUp();\n\nwindow.abash = abash;"},{"type":"alias","name":"ABash commands","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//Enter the script here\nabash.runCommand(args[1]);"}],"text":"^abash (.+)","matching":"regexp","whole_words":true,"case_sensitive":false,"prefix_suffix":true},{"type":"function","name":"attackThings","enabled":true,"code":"//abash.attackThings = function() {\n\t\tlet roomItems = nexusclient.datahandler().GMCP.Items.room;\n\t\tabash.prioList = nexusclient.variables().get(\"basharrrPrioList\");\n\t\tabash.currentArea = nexusclient.datahandler().GMCP.Location.areaname;\n\t\tlet enemyList = abash.prioList[abash.currentArea];\n\t\tlet enemyFound = false;\n\t\tlet bashing = nexusclient.variables().get(\"bashing\");\n\n\t\troomItems.forEach(function(el) {\n\t\t\tif(enemyList && enemyFound == false) {\n\t\t\t\tenemyList.forEach(function(el2) {\n\t\t\t\t\tif(el.name == el2) {\n\t\t\t\t\t\tenemyFound = true;\n\t\t\t\t\t\tnexusclient.datahandler().send_command(\"st \" + el.id);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (enemyFound == false) {\n\t\t\tnexusclient.display_notice(\"No enemies found\", \"green\");\n\t\t\tnexusclient.datahandler().send_command(\"st none\");\n\t\t\tnexusclient.variables().set(\"bashing\", false);\n\t\t} else if (bashing == false) {\n\t\t\tnexusclient.variables().set(\"bashing\", true);\n\t\t\tnexusclient.datahandler().send_command(\"cq all | queue add free \" + abash.bashAttack);\n\t\t} else {\n          nexusclient.datahandler().send_command(\"cq all | queue add free \" + abash.bashAttack);\n        }\n\t//} // End attackThings()"},{"type":"alias","name":"","enabled":true,"actions":[],"text":"","matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"//Enter the script here\nlet bashing = get_variable(\"bashing\");\nif (!bashing) {\n  set_variable(\"bashing\", true);\n  run_function(\"attackThings\", {}, \"ABash\");\n  display_notice(\"It's BASHING TIME!!!\", \"orange\");\n} else {\n  set_variable(\"bashing\", false);\n  send_command(\"cq all\");\n  display_notice(\"Settle down there little fella\", \"orange\");\n}"}],"text":"ABashAttack","matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true}],"description":"Argwin's bashing system"}